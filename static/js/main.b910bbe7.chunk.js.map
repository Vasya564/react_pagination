{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pageNumbers","isFirstPage","isLastPage","_jsxs","_Fragment","children","className","_jsx","concat","href","onClick","map","number","paginateItems","allElements","startIndex","endIndex","slice","App","page","setPage","useState","setPerPage","firstPageElment","lastPageElement","min","id","value","onChange","event","Number","target","handlePageChange","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAcf,EAAW,EAAGY,GAE5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAUnC,OACEM,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,MAAIG,UAAU,aAAYD,SAAA,CACxBE,cAAA,MAAID,UAAS,aAAAE,OAAeP,EAAc,WAAa,IAAKI,SAC1DE,cAAA,KACE,UAAQ,WACRD,UAAU,YACVG,KAAI,IAAAD,OAAMb,GACV,gBAAeM,EAAc,OAAS,QACtCS,QAASA,KAAOT,GAAeL,EAAaD,EAAc,GAAGU,SAC9D,WAKFL,EAAYW,KAAIC,GACfL,cAAA,MACED,UAAS,aAAAE,OAAeb,IAAgBiB,EAAS,SAAW,IAAKP,SAGjEE,cAAA,KACE,UAAQ,WACRD,UAAU,YACVG,KAAI,IAAAD,OAAMI,GACVF,QAASA,IAAMd,EAAagB,GAAQP,SAEnCO,KAREA,KAaTL,cAAA,MAAID,UAAS,aAAAE,OAAeN,EAAa,WAAa,IAAKG,SACzDE,cAAA,KACE,UAAQ,WACRD,UAAU,YACVG,KAAI,IAAAD,OAAMb,GACV,gBAAeO,EAAa,OAAS,QACrCQ,QAASA,KAAOR,GAAcN,EAAaD,EAAc,GAAGU,SAC7D,cAMLE,cAAA,MAAAF,SApDkBQ,MACpB,MAAMC,EAAc7B,EAAW,EAAGQ,GAC5BsB,GAAcpB,EAAc,GAAKD,EACjCsB,EAAWD,EAAarB,EAE9B,OAAOoB,EAAYG,MAAMF,EAAYC,IAgDhCH,GAAgBF,KAAIC,GACnBL,cAAA,MAAI,UAAQ,OAAMF,SAAA,QAAAG,OAAUI,aCxEzBM,EAAgBA,KAC3B,MAAOC,EAAMC,GAAWC,mBAAS,IAC1B3B,EAAS4B,GAAcD,mBAAS,GAGjCE,GAAmBJ,EAAO,GAAKzB,EAC/B8B,EAAkB1B,KAAK2B,IAAIF,EAAkB7B,EAHrC,IAUd,OACES,eAAA,OAAKG,UAAU,YAAWD,SAAA,CACxBE,cAAA,MAAAF,SAAI,0BAEJE,cAAA,KAAGD,UAAU,OAAO,UAAQ,OAAMD,SAAA,QAAAG,OACvBW,EAAI,YAAAX,OAAWe,EAAkB,EAAC,OAAAf,OAAMgB,EAAe,QAAAhB,OAfxD,GAeoE,OAG9EL,eAAA,OAAKG,UAAU,iBAAgBD,SAAA,CAC7BE,cAAA,OAAKD,UAAU,0BAAyBD,SACtCF,eAAA,UACE,UAAQ,kBACRuB,GAAG,kBACHpB,UAAU,eACVqB,MAAOjC,EACPkC,SAAUC,GApBMA,KACxBP,EAAWQ,OAAOD,EAAME,OAAOJ,QAC/BP,EAAQ,IAkBmBY,CAAiBH,GAAOxB,SAAA,CAE3CE,cAAA,UAAQoB,MAAM,IAAGtB,SAAC,MAClBE,cAAA,UAAQoB,MAAM,IAAGtB,SAAC,MAClBE,cAAA,UAAQoB,MAAM,KAAItB,SAAC,OACnBE,cAAA,UAAQoB,MAAM,KAAItB,SAAC,YAIvBE,cAAA,SAAO0B,QAAQ,kBAAkB3B,UAAU,qBAAoBD,SAAC,sBAKlEE,cAAChB,EAAU,CACTE,MAxCQ,GAyCRC,QAASA,EACTC,YAAawB,EACbvB,aAAcwB,QC/CtBc,IAASC,OAAO5B,cAACW,EAAG,IAAKkB,SAASC,eAAe,U","file":"static/js/main.b910bbe7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (number: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, numberOfPages);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages;\n\n  const paginateItems = () => {\n    const allElements = getNumbers(1, total);\n    const startIndex = (currentPage - 1) * perPage;\n    const endIndex = startIndex + perPage;\n\n    return allElements.slice(startIndex, endIndex);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${isFirstPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            aria-disabled={isFirstPage ? 'true' : 'false'}\n            onClick={() => !isFirstPage && onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(number => (\n          <li\n            className={`page-item ${currentPage === number ? 'active' : ''}`}\n            key={number}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${isLastPage ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            aria-disabled={isLastPage ? 'true' : 'false'}\n            onClick={() => !isLastPage && onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {paginateItems().map(number => (\n          <li data-cy=\"item\">{`Item ${number}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const total = 42;\n\n  const firstPageElment = (page - 1) * perPage;\n  const lastPageElement = Math.min(firstPageElment + perPage, total);\n\n  const handlePageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstPageElment + 1} - ${lastPageElement} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => handlePageChange(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}